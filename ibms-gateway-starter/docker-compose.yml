volumes:
  prometheus-agent:
    name: ${COMPOSE_PROJECT_NAME}-prometheus-agent
  postgresql:
    name: ${COMPOSE_PROJECT_NAME}-postgresql
  mysql:
    name: ${COMPOSE_PROJECT_NAME}-mysql

services:
  gateway:
    build: .
    image: ecosync/ibms-gateway:0.0.3
    network_mode: host
    volumes:
      - ./target/ibms-gateway-starter-0.0.1-SNAPSHOT.jar:/opt/app/ibms-gateway-starter-0.0.1-SNAPSHOT.jar
      - ./scrape_config_file.yml:/opt/app/scrape_config_file.yml
    command: [ "java", "-jar", "ibms-gateway-starter-0.0.1-SNAPSHOT.jar" ]
    environment:
      # BACnet网络接口，默认值：eth0
      BACNET_IFACE:
      # 网关地址，prometheus-agent会从该地址采集数据，默认值：localhost:8080
      GATEWAY_HOST:
      # Web Server 端口，默认值：8080
      SERVER_PORT:
  prometheus-agent:
    image: prom/prometheus:v3.2.1
    network_mode: host
    environment:
      # 网关编码，所有从 prometheus-agent 采集到的指标都会附加一个 gateway_code 标签，建议为每个网关都设置一个网关编码，方便区分指标来源
      GATEWAY_CODE:
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./scrape_config_file.yml:/etc/prometheus/scrape_config_file.yml
      - prometheus-agent:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.listen-address=0.0.0.0:19090
      - --config.auto-reload-interval=30s
      - --enable-feature=auto-reload-config,metadata-wal-records
      - --storage.agent.path=/prometheus
      - --agent
  postgresql:
    image: postgres:14.17
    network_mode: host
    environment:
      POSTGRES_PASSWORD: CJVixCszaS+7raa/5326YJDq3xrSBXHg
    volumes:
      - ./initdb-postgresql.sh:/docker-entrypoint-initdb.d/initdb.sh
      - postgresql:/var/lib/postgresql/data
    profiles:
      - postgresql
  mysql:
    image: mysql:8.0.41
    network_mode: host
    environment:
      MYSQL_ROOT_PASSWORD: CJVixCszaS+7raa/5326YJDq3xrSBXHg
    healthcheck:
      test: [ "CMD", "mysqladmin", "-uroot", "-p$$MYSQL_ROOT_PASSWORD", "ping", "-h", "localhost" ]
      timeout: 10s
      interval: 30s
      retries: 10
      start_period: 180s
    volumes:
      - ./initdb-mysql.sh:/docker-entrypoint-initdb.d/initdb.sh
      - mysql:/var/lib/mysql
    profiles:
      - mysql
