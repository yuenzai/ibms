volumes:
  prometheus-agent:
    name: gateway-prometheus-agent
  postgresql:
    name: gateway-postgresql
  mysql:
    name: gateway-mysql

services:
  gateway:
    build: .
    image: ecosync/ibms-gateway:0.0.3
    network_mode: host
    volumes:
      - ./target/ibms-gateway-starter-0.0.1-SNAPSHOT.jar:/opt/app/ibms-gateway-starter-0.0.1-SNAPSHOT.jar
      - ./scrape_config_file.yml:/opt/app/scrape_config_file.yml
    command: [ "java", "-jar", "ibms-gateway-starter-0.0.1-SNAPSHOT.jar" ]
    environment:
      BACNET_IFACE: ${BACNET_IFACE:-eth0}
      GATEWAY_HOST: ${GATEWAY_HOST:-localhost:8080}
  prometheus-agent:
    image: prom/prometheus:v3.2.0
    network_mode: host
    environment:
      GATEWAY_CODE: ${GATEWAY_CODE}
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./scrape_config_file.yml:/etc/prometheus/scrape_config_file.yml
      - prometheus-agent:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.listen-address=0.0.0.0:9090
      - --config.auto-reload-interval=30s
      - --enable-feature=auto-reload-config,metadata-wal-records
      - --storage.agent.path=/prometheus
      - --agent
  postgresql:
    image: postgres:14.17
    network_mode: host
    environment:
      POSTGRES_PASSWORD: CJVixCszaS+7raa/5326YJDq3xrSBXHg
    volumes:
      - ./initdb-postgresql.sh:/docker-entrypoint-initdb.d/initdb.sh
      - postgresql:/var/lib/postgresql/data
#  mysql:
#    image: mysql:8.0.41
#    network_mode: host
#    environment:
#      MYSQL_ROOT_PASSWORD: CJVixCszaS+7raa/5326YJDq3xrSBXHg
#    healthcheck:
#      test: [ "CMD", "mysqladmin", "-uroot", "-p$$MYSQL_ROOT_PASSWORD", "ping", "-h", "localhost" ]
#      timeout: 10s
#      interval: 30s
#      retries: 10
#      start_period: 180s
#    volumes:
#      - ./initdb-mysql.sh:/docker-entrypoint-initdb.d/initdb.sh
#      - mysql:/var/lib/mysql
